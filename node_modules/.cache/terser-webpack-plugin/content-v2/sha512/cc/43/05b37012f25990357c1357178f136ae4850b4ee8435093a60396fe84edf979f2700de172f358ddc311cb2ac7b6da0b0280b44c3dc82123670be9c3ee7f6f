{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"webpackHotUpdate(0,{\"./src/reducers/todos.tsx\":function(module,exports,__webpack_require__){\"use strict\";eval('\\nvar __assign = (this && this.__assign) || function () {\\n    __assign = Object.assign || function(t) {\\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\\n            s = arguments[i];\\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\\n                t[p] = s[p];\\n        }\\n        return t;\\n    };\\n    return __assign.apply(this, arguments);\\n};\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\nvar ActionTypes_1 = __webpack_require__(\"./src/constants/ActionTypes.tsx\");\\nvar initialState = [\\n    {\\n        text: \\'ToDo\\',\\n        completed: false,\\n        id: 0\\n    }\\n];\\nfunction todos(state, action) {\\n    if (state === void 0) { state = initialState; }\\n    switch (action.type) {\\n        case ActionTypes_1.ADD_TODO:\\n            return state.concat([\\n                {\\n                    id: state.reduce(function (maxId, todo) { return Math.max(todo.id, maxId); }, -1) + 1,\\n                    completed: false,\\n                    text: action.text\\n                }\\n            ]);\\n        case ActionTypes_1.DELETE_TODO:\\n            return state.filter(function (todo) {\\n                return todo.id !== action.id;\\n            });\\n        case ActionTypes_1.EDIT_TODO:\\n            return state.map(function (todo) {\\n                return todo.id === action.id ? __assign({}, todo, { text: action.text }) :\\n                    todo;\\n            });\\n        case ActionTypes_1.COMPLETE_TODO:\\n            return state.map(function (todo) {\\n                return todo.id === action.id ? __assign({}, todo, { completed: !todo.completed }) :\\n                    todo;\\n            });\\n        default:\\n            return state;\\n    }\\n}\\nexports.default = todos;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVkdWNlcnMvdG9kb3MudHN4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3NyYy9yZWR1Y2Vycy90b2Rvcy50c3g/NzRmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIEFERF9UT0RPLFxuICAgIERFTEVURV9UT0RPLFxuICAgIEVESVRfVE9ETyxcbiAgICBDT01QTEVURV9UT0RPXG4gIH0gZnJvbSAnLi4vY29uc3RhbnRzL0FjdGlvblR5cGVzJ1xuICBcbiAgY29uc3QgaW5pdGlhbFN0YXRlID0gW1xuICAgIHtcbiAgICAgIHRleHQ6ICdUb0RvJyxcbiAgICAgIGNvbXBsZXRlZDogZmFsc2UsXG4gICAgICBpZDogMFxuICAgIH1cbiAgXVxuICBcbiAgZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9kb3Moc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbjogYW55KSB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgY2FzZSBBRERfVE9ETzpcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZDogc3RhdGUucmVkdWNlKChtYXhJZCwgdG9kbykgPT4gTWF0aC5tYXgodG9kby5pZCwgbWF4SWQpLCAtMSkgKyAxLFxuICAgICAgICAgICAgY29tcGxldGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHRleHQ6IGFjdGlvbi50ZXh0XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gIFxuICAgICAgY2FzZSBERUxFVEVfVE9ETzpcbiAgICAgICAgcmV0dXJuIHN0YXRlLmZpbHRlcih0b2RvID0+XG4gICAgICAgICAgdG9kby5pZCAhPT0gYWN0aW9uLmlkXG4gICAgICAgIClcbiAgXG4gICAgICBjYXNlIEVESVRfVE9ETzpcbiAgICAgICAgcmV0dXJuIHN0YXRlLm1hcCh0b2RvID0+XG4gICAgICAgICAgdG9kby5pZCA9PT0gYWN0aW9uLmlkID9cbiAgICAgICAgICAgIHsgLi4udG9kbywgdGV4dDogYWN0aW9uLnRleHQgfSA6XG4gICAgICAgICAgICB0b2RvXG4gICAgICAgIClcbiAgXG4gICAgICBjYXNlIENPTVBMRVRFX1RPRE86XG4gICAgICAgIHJldHVybiBzdGF0ZS5tYXAodG9kbyA9PlxuICAgICAgICAgIHRvZG8uaWQgPT09IGFjdGlvbi5pZCA/XG4gICAgICAgICAgICB7IC4uLnRvZG8sIGNvbXBsZXRlZDogIXRvZG8uY29tcGxldGVkIH0gOlxuICAgICAgICAgICAgdG9kb1xuICAgICAgICApXG4gIFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHN0YXRlXG4gICAgfVxuICB9XG4gICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFGQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBbENBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/reducers/todos.tsx\\n')}});","extractedComments":[]}